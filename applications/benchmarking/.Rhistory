X_test
n_test = 1000
plotdf = data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_drf_sample_test[1:n_test,1,10], method="DRF")
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_gan_sample_test[1:n_test,1,10], method="CGAN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cvae_sample_test[1:n_test,1,10], method="CVAE"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_maf_sample_test[1:n_test,1,10], method="MAF"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_knn_sample_test[1:n_test,1,10], method="k-NN"))
plotdf
Y
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
source("C:/Users/Jeff/OneDrive/Refereereports_JMLR/CMEcode.R")
library(kernlab)
CME<-function(x,Y,X, kY=NULL,kX=NULL, lambda=0.01, prob=T ){
# x: N x d matrix
# X,Y as usual
# lambda: regularization parameter
if (is.null(kY)){
## What they use in the paper: Gaussian kernel with sigma=0.1
kY<-rbfdot(sigma=0.1)
}
if (is.null(kX)){
## What they use in the paper: Gaussian kernel with sigma=0.1
kX<-rbfdot(sigma=0.1)
}
kZ<-kernelMatrix(kX, X, y = x)
KZ<-kernelMatrix(kX, X, y = X)
n<-dim(kZ)[1]
W<-solve(KZ + n*lambda*diag(n))
weights<-t(kZ)%*%W
if (prob==T){
# Clip and renormalize
weights[(weights < 0 )]<-0
weights<-weights/sum(weights)
}
return(weights)
}
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
X_test[1,]
X_test
## Fitting CME ##
weights<-CME(x=X_test[1,],Y=Y,X=X, prob=T )
Y
X
dim(X)
n = 1000
p = 10
d = 2
X <- matrix(runif(n*p), ncol=p)
Y <- matrix(runif(n*d), ncol=d)
Y[,1] = Y[,1] + X[,1] #mean shift of Y1 based on X1
Y[,2] = Y[,2] * X[,2] #variance shift of Y2 based on X2
X_test = pickle_data$X_test
dim(X)
## Fitting CME ##
weights<-CME(x=X_test[1,],Y=Y,X=X, prob=T )
X
Y
X_test[1,]
x=X_test[1,]
kZ<-kernelMatrix(kX, X, y = x)
kZ
if (is.null(kY)){
## What they use in the paper: Gaussian kernel with sigma=0.1
kY<-rbfdot(sigma=0.1)
}
if (is.null(kX)){
## What they use in the paper: Gaussian kernel with sigma=0.1
kX<-rbfdot(sigma=0.1)
}
## What they use in the paper: Gaussian kernel with sigma=0.1
kY<-rbfdot(sigma=0.1)
## What they use in the paper: Gaussian kernel with sigma=0.1
kX<-rbfdot(sigma=0.1)
kZ<-kernelMatrix(kX, X, y = x)
dim(X)
dim(x)
x=X_test[1,,drop=F]
## Fitting CME ##
weights<-CME(x=X_test[1,,drop=F],Y=Y,X=X, prob=T )
Xtest0 <- Y[sample(1:n, size=n, replace=T, prob=c(weights)),]
pickle_data$ypred_cme_sample_test[1:n_test,1,10]
pickle_data$ypred_cme_sample_test[1:n_test,]
pickle_data$ypred_cme_sample_test[1:n_test,1,]
pickle_data$ypred_cme_sample_test[1:n_test,1,10]
dim(pickle_data$ypred_cme_sample_test[1:n_test,1,10])
plot(pickle_data$ypred_cme_sample_test[1:n_test,1,10])
pickle_data$ypred_knn_sample_test[1:n_test,1,10]
pickle_data$ypred_knn_sample_test[1:n_test,1,1:10]
n_test
dim(pickle_data$ypred_knn_sample_test[1:n_test,1,1:10])
dim(pickle_data$ypred_knn_sample_test[1:n_test,1,10])
length(pickle_data$ypred_knn_sample_test[1:n_test,1,10])
dim(X_test)
weights<-CME(x=X_test[1,,drop=F],Y=Y,X=X, prob=T )
Xtest0 <- Y[sample(1:10, size=n, replace=T, prob=c(weights)),]
weights
## Fitting CME ##
weights<-CME(x=X_test[1:2,,drop=F],Y=Y,X=X, prob=T )
weights
dim(weights)
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
Y[sample(1:n, size=10, replace=T, prob=c(weights[1,])),]
class(pickle_data$ypred_gan_sample_test[1:n_test,1,10])
dim(pickle_data$ypred_gan_sample_test[1:n_test,1,10])
dim(pickle_data$ypred_gan_sample_test)
classpickle_data$ypred_gan_sample_test)
class(pickle_data$ypred_gan_sample_test)
pickle_data$ypred_cme_sample_test[i,1:2,1:10]
i=1
pickle_data$ypred_cme_sample_test[i,1:2,1:10]
pickle_data$ypred_cme_sample_test[i,1,1:10]
pickle_data$ypred_cme_sample_test[i,1,1:100]
pickle_data$ypred_cme_sample_test[i,1,1:10]
pickle_data$ypred_cme_sample_test[i,1,1:5]
Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1:2,1:10]
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
tmp
pickle_data$ypred_cme_sample_test[i,1,1:10]
tmp[,1]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
for (i in 1:n_text){
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
}
for (i in 1:n_test){
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
}
pickle_data$ypred_cme_sample_test
n_test = 1000
plotdf = data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_drf_sample_test[1:n_test,1,10], method="DRF")
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_gan_sample_test[1:n_test,1,10], method="CGAN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cvae_sample_test[1:n_test,1,10], method="CVAE"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_maf_sample_test[1:n_test,1,10], method="MAF"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_knn_sample_test[1:n_test,1,10], method="k-NN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cme_sample_test[1:n_test,1,10], method="CME"))
#plotdf = rbind(plotdf,
#               data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_rf_sample_test[1:n_test,1,10], method="RF"))
plotdf$method = factor(plotdf$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.01, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
gg1
plotdf2 = data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_drf_sample_test[1:n_test,2,10], method="DRF")
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_gan_sample_test[1:n_test,2,10], method="CGAN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cvae_sample_test[1:n_test,2,10], method="CVAE"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_maf_sample_test[1:n_test,2,10], method="MAF"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_knn_sample_test[1:n_test,2,10], method="k-NN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cme_sample_test[1:n_test,2,10], method="CME"))
plotdf2$method = factor(plotdf2$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.01, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.05, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.05, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
library(ggplot2)
library(plyr)
library(cowplot)
library(reticulate)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source_python("read_pickle.py")
pickle_data <- read_pickle_file("data/output/vignette.data")
# TODO fit here CME
n = 1000
p = 10
d = 2
X <- matrix(runif(n*p), ncol=p)
Y <- matrix(runif(n*d), ncol=d)
Y[,1] = Y[,1] + X[,1] #mean shift of Y1 based on X1
Y[,2] = Y[,2] * X[,2] #variance shift of Y2 based on X2
X_test = pickle_data$X_test
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
for (i in 1:n_test){
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
}
##################
n_test = 1000
plotdf = data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_drf_sample_test[1:n_test,1,10], method="DRF")
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_gan_sample_test[1:n_test,1,10], method="CGAN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cvae_sample_test[1:n_test,1,10], method="CVAE"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_maf_sample_test[1:n_test,1,10], method="MAF"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_knn_sample_test[1:n_test,1,10], method="k-NN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cme_sample_test[1:n_test,1,10], method="CME"))
#plotdf = rbind(plotdf,
#               data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_rf_sample_test[1:n_test,1,10], method="RF"))
plotdf$method = factor(plotdf$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.05, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
gg1
#qplot(pickle_data$X_test[,1], y=pickle_data$ypred_knn_sample_test[,1,1])
#qplot(pickle_data$X_test[,2], y=pickle_data$ypred_gp_rbf_sample_test[,2,1])
plotdf2 = data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_drf_sample_test[1:n_test,2,10], method="DRF")
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_gan_sample_test[1:n_test,2,10], method="CGAN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cvae_sample_test[1:n_test,2,10], method="CVAE"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_maf_sample_test[1:n_test,2,10], method="MAF"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_knn_sample_test[1:n_test,2,10], method="k-NN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cme_sample_test[1:n_test,2,10], method="CME"))
#plotdf2 = rbind(plotdf2,
#                data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_rf_sample_test[1:n_test,2,10], method="RF"))
plotdf2$method = factor(plotdf2$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.05, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
ggsave('plots/vignette.png', width=10, height=4)
ggsave('plots/vignette.png', width=10, height=4)
library(ggplot2)
library(plyr)
library(cowplot)
library(reticulate)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source_python("read_pickle.py")
pickle_data <- read_pickle_file("data/output/vignette.data")
# TODO fit here CME
n = 1000
p = 10
d = 2
X <- matrix(runif(n*p), ncol=p)
Y <- matrix(runif(n*d), ncol=d)
Y[,1] = Y[,1] + X[,1] #mean shift of Y1 based on X1
Y[,2] = Y[,2] * X[,2] #variance shift of Y2 based on X2
X_test = pickle_data$X_test
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
for (i in 1:n_test){
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
}
##################
n_test = 1000
plotdf = data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_drf_sample_test[1:n_test,1,10], method="DRF")
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_gan_sample_test[1:n_test,1,10], method="CGAN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cvae_sample_test[1:n_test,1,10], method="CVAE"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_maf_sample_test[1:n_test,1,10], method="MAF"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_knn_sample_test[1:n_test,1,10], method="k-NN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cme_sample_test[1:n_test,1,10], method="CME"))
#plotdf = rbind(plotdf,
#               data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_rf_sample_test[1:n_test,1,10], method="RF"))
plotdf$method = factor(plotdf$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.1, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
gg1
#qplot(pickle_data$X_test[,1], y=pickle_data$ypred_knn_sample_test[,1,1])
#qplot(pickle_data$X_test[,2], y=pickle_data$ypred_gp_rbf_sample_test[,2,1])
plotdf2 = data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_drf_sample_test[1:n_test,2,10], method="DRF")
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_gan_sample_test[1:n_test,2,10], method="CGAN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cvae_sample_test[1:n_test,2,10], method="CVAE"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_maf_sample_test[1:n_test,2,10], method="MAF"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_knn_sample_test[1:n_test,2,10], method="k-NN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cme_sample_test[1:n_test,2,10], method="CME"))
#plotdf2 = rbind(plotdf2,
#                data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_rf_sample_test[1:n_test,2,10], method="RF"))
plotdf2$method = factor(plotdf2$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.1, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
ggplot(plotdf2, aes(x=x, y=y))
ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.1, aes(color=method))
ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.05, aes(color=method))
?geom_point
ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=2, aes(color=method))
ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=1, aes(color=method))
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=1, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
gg1
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=1, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.5, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
library(ggplot2)
library(plyr)
library(cowplot)
library(reticulate)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source_python("read_pickle.py")
pickle_data <- read_pickle_file("data/output/vignette.data")
# TODO fit here CME
n = 1000
p = 10
d = 2
X <- matrix(runif(n*p), ncol=p)
Y <- matrix(runif(n*d), ncol=d)
Y[,1] = Y[,1] + X[,1] #mean shift of Y1 based on X1
Y[,2] = Y[,2] * X[,2] #variance shift of Y2 based on X2
X_test = pickle_data$X_test
## Fitting CME ##
weights<-CME(x=X_test,Y=Y,X=X, prob=T )
for (i in 1:n_test){
tmp<-Y[sample(1:n, size=10, replace=T, prob=c(weights[i,])),]
pickle_data$ypred_cme_sample_test[i,1,1:10] <- tmp[,1]
pickle_data$ypred_cme_sample_test[i,2,1:10] <- tmp[,2]
}
##################
n_test = 1000
plotdf = data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_drf_sample_test[1:n_test,1,10], method="DRF")
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_gan_sample_test[1:n_test,1,10], method="CGAN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cvae_sample_test[1:n_test,1,10], method="CVAE"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_maf_sample_test[1:n_test,1,10], method="MAF"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_knn_sample_test[1:n_test,1,10], method="k-NN"))
plotdf = rbind(plotdf,
data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_cme_sample_test[1:n_test,1,10], method="CME"))
#plotdf = rbind(plotdf,
#               data.frame(x=pickle_data$X_test[1:n_test,1], y=pickle_data$ypred_rf_sample_test[1:n_test,1,10], method="RF"))
plotdf$method = factor(plotdf$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg1 = ggplot(plotdf, aes(x=x, y=y)) +
geom_point(size=0.5, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(intercept=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(intercept=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(intercept=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["1"]), y=expression(Y["1"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.3, 2.2))
gg1
#qplot(pickle_data$X_test[,1], y=pickle_data$ypred_knn_sample_test[,1,1])
#qplot(pickle_data$X_test[,2], y=pickle_data$ypred_gp_rbf_sample_test[,2,1])
plotdf2 = data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_drf_sample_test[1:n_test,2,10], method="DRF")
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_gan_sample_test[1:n_test,2,10], method="CGAN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cvae_sample_test[1:n_test,2,10], method="CVAE"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_maf_sample_test[1:n_test,2,10], method="MAF"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_knn_sample_test[1:n_test,2,10], method="k-NN"))
plotdf2 = rbind(plotdf2,
data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_cme_sample_test[1:n_test,2,10], method="CME"))
#plotdf2 = rbind(plotdf2,
#                data.frame(x=pickle_data$X_test[1:n_test,2], y=pickle_data$ypred_rf_sample_test[1:n_test,2,10], method="RF"))
plotdf2$method = factor(plotdf2$method, levels = c("DRF", "CGAN", "CVAE", "MAF", "k-NN", "CME"))
gg2 = ggplot(plotdf2, aes(x=x, y=y)) +
geom_point(size=0.5, aes(color=method)) +
#geom_smooth(aes(color=method)) +
geom_abline(slope=qunif(0.5), color='black', linetype='solid', size=0.5) +
geom_abline(slope=qunif(0.1), color='black', linetype='dashed', size=0.5) +
geom_abline(slope=qunif(0.9), color='black', linetype='dashed', size=0.5) +
facet_grid(.~method) +
labs(x=expression(X["2"]), y=expression(Y["2"]))+
theme_light()+
theme(axis.text.x = element_text(size=7), axis.text.y = element_text(size=8), legend.position='none')+
ylim(c(-0.35, 1.05))
gg2
plot_grid(gg1, gg2, ncol=1)
ggsave('plots/vignette.png', width=10, height=4)
